<?php
session_start();
// Require the 'connect.php' file. This file should contain the code for establishing a database connection.
require("connect.php");


//Display data in readable form
function dd($value)
{
    // Print the '$users' array in a human-readable format.
// The '<pre>' HTML tags preserve text formatting, making it easier to read.
// The 'print_r()' function prints human-readable information about a variable.
    echo "<pre>", print_r($value, true), "</pre>";
    die();
}

function executeQuery($sql, $data)
{
    //interacting with database inside the function
    global $conn;

    // Prepare the SQL statement for execution.
    $stmt = $conn->prepare($sql);

    // Get an array of the values of the conditions.
    $values = array_values($data);

    // Create a string of 's' characters for the types parameter of bind_param. The number of 's' characters should be equal to the number of conditions.
    $types = str_repeat("s", count($values));

    // Bind the parameters to the SQL query. The types parameter is a string that contains one or more characters which specify the types of the corresponding bind variables.
    $stmt->bind_param($types, ...$values);

    // Execute the prepared statement.
    $stmt->execute();
    return $stmt;
}


function selectAll($table, $conditions = [])
{
    global $conn;
    // SQL query to select all records from the 'users' table.
    $sql = "SELECT * FROM $table";

    if (empty($conditions)) {
        // Prepare the SQL statement using the 'prepare' method of the 'mysqli' object.
        $stmt = $conn->prepare($sql);

        // Execute the prepared statement.
        $stmt->execute();

        // Fetch all the results of the executed statement as an associative array.
// The 'get_result' method returns a 'mysqli_result' object for successful SELECT queries, or FALSE for other DML queries or on failure.
// The 'fetch_all' method returns an array of associative arrays representing fetched rows in the result set of the executed statement.
        $records = $stmt->get_result()->fetch_all(MYSQLI_ASSOC);

        return $records;
    } else {
        // return records that match conditions
        // $sql = "SELECT * FROM $table WHERE username ='KalPei123' AND admin = 1";
        $i = 0;
        foreach ($conditions as $key => $value) {
            if ($i == 0) {
                $sql = $sql . " WHERE $key=?";
            } else {
                $sql = $sql . " AND $key=?";
            }
            $i++;
        }

        // Call the executeQuery function, which prepares and executes the SQL statement.
        // The function should return a mysqli_stmt object.
        $stmt = executeQuery($sql, $conditions);

        // Fetch all the results of the executed statement as an associative array.
        $records = $stmt->get_result()->fetch_all(MYSQLI_ASSOC);

        // Return the fetched records.
        return $records;
    }

}

 //2nd arg. Retrieves a post with a specific ID from a table.
function selectOne($table, $conditions)
{
    global $conn;
    // SQL query to select all records from the 'users' table.
    $sql = "SELECT * FROM $table";

    $i = 0;
    foreach ($conditions as $key => $value) {
        if ($i == 0) {
            $sql = $sql . " WHERE $key=?";
        } else {
            $sql = $sql . " AND $key=?";
        }
        $i++;
    }
    // $sql = SELECT * FROM users WHERE admin=0 and username='Awa' LIMIT 1
    $sql = $sql . " LIMIT 1";

    $stmt = executeQuery($sql, $conditions);
    $records = $stmt->get_result()->fetch_assoc();
    return $records;
}

//Create function to add new record
function create($table, $data)
{
    global $conn;
    // $sql = "INSERT INTO users (username, admin, email, password) VALUES (?,?,?,?)"
    // $sql = "INSERT INTO users SET username=?, admin=?, email=?, password=?"
    $sql = "INSERT INTO $table SET ";
    $i = 0;
    foreach ($data as $key => $value) {
        if ($i == 0) {
            $sql = $sql . " $key=?";
        } else {
            $sql = $sql . ", $key=?";
        }
        $i++;
    }

    $stmt = executeQuery($sql, $data);

    // Get the ID generated by a query (usually INSERT) on a table with a column having the AUTO_INCREMENT attribute.
    $id = $stmt->insert_id;
    return $id;
}

//Create function to add new record
function update($table, $id, $data)
{
    global $conn;
    // $sql = "UPDATE users SET username=?, admin=?, email=?, password=? WHERE id=?"
    $sql = "UPDATE $table SET";

    //Query
    $i = 0;
    foreach ($data as $key => $value) {
        if ($i == 0) {
            $sql = $sql . " $key=?";
        } else {
            $sql = $sql . ", $key=?";
        }
        $i++;
    }

    $sql = $sql . " WHERE id=?";
    $data["id"] = $id;
    $stmt = executeQuery($sql, $data);

    //affected_rows will return negative if query fails
    return $stmt->affected_rows;
}

function delete($table, $id)
{
    global $conn;
    // $sql = "DELETE FROM users WHERE id=?"
    //Query
    $sql = "DELETE FROM $table WHERE id=?";

    $stmt = executeQuery($sql, ['id' => $id]);

    //affected_rows will return negative if query fails
    return $stmt->affected_rows;
}


